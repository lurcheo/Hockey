<UserControl
    x:Class="Hockey.Client.Main.View.MainControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:beh="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:behaviors="clr-namespace:Hockey.Client.Main.Behaviors"
    xmlns:cv="clr-namespace:Hockey.Client.Shared.Converter;assembly=Hockey.Client.Shared"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:Hockey.Client.Main.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    xmlns:vm="clr-namespace:Hockey.Client.Main.ViewModel"
    d:DataContext="{d:DesignInstance vm:MainViewModel}"
    d:Height="450"
    d:Width="800"
    Style="{StaticResource MaterialDesignUserControl}"
    mc:Ignorable="d">
    <i:Interaction.Behaviors>
        <behaviors:EventKeyBindingBehavior
            x:Name="eventKeysPresser"
            EventFactories="{Binding Model.EventFactories}"
            KeyUpCallback="{Binding AddEventCommand}" />
    </i:Interaction.Behaviors>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <ToolBarTray
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="2">
            <ToolBar ClipToBounds="False" Style="{StaticResource MaterialDesignToolBar}">
                <Menu>
                    <MenuItem Header="Файл">
                        <MenuItem Header="Открыть">
                            <MenuItem Command="{Binding ReadVideoFromFileCommand}" Header="Видео" />
                            <MenuItem Command="{Binding ReadProjectFromFileCommand}" Header="Проект" />
                            <MenuItem Command="{Binding ReadHomeTeamToFileCommand}" Header="Домашняя команда" />
                            <MenuItem Command="{Binding ReadGuestTeamToFileCommand}" Header="Гостевая команда" />
                            <MenuItem Command="{Binding ReadEventsCommand}" Header="События" />
                        </MenuItem>
                        <MenuItem Header="Сохранить">
                            <MenuItem Command="{Binding SaveProjectToFileCommand}" Header="Проект" />
                            <MenuItem Command="{Binding SaveHomeTeamToFileCommand}" Header="Домашняя команда" />
                            <MenuItem Command="{Binding SaveGuestTeamToFileCommand}" Header="Гостевая команда" />
                            <MenuItem Command="{Binding SaveEventsCommand}" Header="События" />
                        </MenuItem>
                    </MenuItem>
                </Menu>
            </ToolBar>
        </ToolBarTray>
        <DockPanel Grid.Row="1">
            <md:DrawerHost
                IsLeftDrawerOpen="{Binding IsLeftMenuOpen}"
                IsRightDrawerOpen="{Binding IsRightMenuOpen}"
                OpenMode="Standard">
                <md:DrawerHost.LeftDrawerContent>
                    <TabControl
                        Width="700"
                        md:NavigationRailAssist.ShowSelectionBackground="True"
                        SnapsToDevicePixels="True"
                        Style="{StaticResource MaterialDesignNavigationRailTabControl}"
                        TabStripPlacement="Left">
                        <TabControl.Resources>
                            <Style x:Key="tabIcon" TargetType="md:PackIcon">
                                <Setter Property="Height" Value="24" />
                                <Setter Property="Width" Value="24" />
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                            <Style x:Key="tabText" TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap" />
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </TabControl.Resources>
                        <TabItem>
                            <TabItem.Header>
                                <StackPanel Width="auto" Height="auto">
                                    <md:PackIcon Kind="Home" Style="{StaticResource tabIcon}" />
                                    <TextBlock Style="{StaticResource tabText}" Text="Команда хозяев" />
                                </StackPanel>
                            </TabItem.Header>
                            <ContentControl prism:RegionManager.RegionName="{x:Static local:Regions.HomeTeam}" />
                        </TabItem>
                        <TabItem>
                            <TabItem.Header>
                                <StackPanel Width="auto" Height="auto">
                                    <md:PackIcon Kind="GuestRoom" Style="{StaticResource tabIcon}" />
                                    <TextBlock Style="{StaticResource tabText}" Text="Команда гостей" />
                                </StackPanel>
                            </TabItem.Header>
                            <ContentControl prism:RegionManager.RegionName="{x:Static local:Regions.GuestTeam}" />
                        </TabItem>
                        <TabItem>
                            <TabItem.Header>
                                <StackPanel Width="auto" Height="auto">
                                    <md:PackIcon Kind="Event" Style="{StaticResource tabIcon}" />
                                    <TextBlock Style="{StaticResource tabText}" Text="Создать событие" />
                                </StackPanel>
                            </TabItem.Header>
                            <ContentControl prism:RegionManager.RegionName="{x:Static local:Regions.EventsCreating}" />
                        </TabItem>
                        <TabItem>
                            <TabItem.Header>
                                <StackPanel Width="auto" Height="auto">
                                    <md:PackIcon Kind="Tools" Style="{StaticResource tabIcon}" />
                                    <TextBlock Style="{StaticResource tabText}" Text="Событие" />
                                </StackPanel>
                            </TabItem.Header>
                            <ContentControl prism:RegionManager.RegionName="{x:Static local:Regions.EventConstructor}" />
                        </TabItem>
                    </TabControl>
                </md:DrawerHost.LeftDrawerContent>
                <md:DrawerHost.RightDrawerContent>
                    <ContentControl Width="320" prism:RegionManager.RegionName="{x:Static local:Regions.Events}" />
                </md:DrawerHost.RightDrawerContent>
                <Grid Focusable="True">
                    <Grid.InputBindings>
                        <KeyBinding Key="Left" Command="{Binding ShowPreviousFrameCommand}" />
                        <KeyBinding
                            Key="Left"
                            Command="{Binding ShowPrevious10SecondsCommand}"
                            Modifiers="Ctrl" />
                        <KeyBinding Key="Right" Command="{Binding ShowNextFrameCommand}" />
                        <KeyBinding
                            Key="Right"
                            Command="{Binding ShowNext10SecondsCommand}"
                            Modifiers="Ctrl" />
                        <KeyBinding Key="Space" Command="{Binding ReversePauseCommand}" />
                    </Grid.InputBindings>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <ToggleButton
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="15"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        AutomationProperties.Name="HamburgerToggleButton"
                        IsChecked="{Binding IsLeftMenuOpen}"
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                        ToolTip="Открыть панель редактирования событий и команд" />
                    <ToggleButton
                        Grid.Row="0"
                        Grid.Column="3"
                        Margin="15"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        AutomationProperties.Name="HamburgerToggleButton"
                        IsChecked="{Binding IsRightMenuOpen}"
                        RenderTransformOrigin="0.5,0.5"
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                        ToolTip="Открыть панель управления событиями">
                        <ToggleButton.RenderTransform>
                            <ScaleTransform ScaleX="-1" />
                        </ToggleButton.RenderTransform>
                    </ToggleButton>
                    <Image
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="4"
                        Margin="65,0,65,0"
                        VerticalAlignment="Bottom"
                        Source="{Binding Frame}" />
                    <ComboBox
                        Grid.Row="1"
                        Grid.Column="1"
                        Width="100"
                        Margin="13,0"
                        VerticalAlignment="Center"
                        md:HintAssist.Hint="Скорость"
                        DisplayMemberPath="DisplayName"
                        FontSize="15"
                        ItemsSource="{Binding Model.PlaybackSpeeds}"
                        SelectedItem="{Binding Model.SelectedPlaybackSpeed}"
                        Style="{StaticResource MaterialDesignFloatingHintComboBox}" />
                    <StackPanel
                        Grid.Row="1"
                        Grid.Column="0"
                        IsEnabled="{Binding Model.IsPlayEvent, Converter={cv:ReverseBoolConverter}}"
                        Orientation="Horizontal">
                        <Button
                            Command="{Binding ShowPrevious10SecondsCommand}"
                            Content="{md:PackIcon Kind=ArrowLeftBoldBoxOutline}"
                            Style="{StaticResource IconButton}"
                            ToolTip="Перемотать видео на 10 секунд назад" />
                        <Button
                            Command="{Binding ShowPreviousFrameCommand}"
                            Content="{md:PackIcon Kind=ArrowLeftBoldCircleOutline}"
                            Style="{StaticResource IconButton}"
                            ToolTip="Показать предыдущий кадр" />
                        <Button Command="{Binding ReversePauseCommand}" ToolTip="Пауза">
                            <Button.Style>
                                <Style BasedOn="{StaticResource IconButton}" TargetType="{x:Type Button}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Model.IsPaused}" Value="True">
                                            <Setter Property="Content" Value="{md:PackIcon Kind=PlayOutline}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Model.IsPaused}" Value="False">
                                            <Setter Property="Content" Value="{md:PackIcon Kind=PauseCircleOutline}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <!--<Button
                            Command="{Binding StopVideoCommand}"
                            Content="{md:PackIcon Kind=StopCircleOutline}"
                            Style="{StaticResource IconButton}" />-->
                        <Button
                            Command="{Binding ShowNextFrameCommand}"
                            Content="{md:PackIcon Kind=ArrowRightBoldCircleOutline}"
                            Style="{StaticResource IconButton}"
                            ToolTip="Показать следующий кадр" />
                        <Button
                            Command="{Binding ShowNext10SecondsCommand}"
                            Content="{md:PackIcon Kind=ArrowRightBoldBoxOutline}"
                            Style="{StaticResource IconButton}"
                            ToolTip="Перемотать видео на 10 секунд вперед" />
                        <ToggleButton
                            Margin="10"
                            IsChecked="{Binding IsEnabled, ElementName=eventKeysPresser}"
                            ToolTip="Быстрая разметка" />
                    </StackPanel>
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="2"
                        VerticalAlignment="Center"
                        DataContext="{Binding Model}"
                        FontSize="17">
                        <Run Text="{Binding CurrentTime, StringFormat=\{0:h\\:mm\\:ss\}}" />
                        <Run Text="/" />
                        <Run Text="{Binding EndTime, StringFormat=\{0:h\\:mm\\:ss\}}" />
                    </TextBlock>
                    <Slider
                        Grid.Row="1"
                        Grid.Column="3"
                        Margin="10,20,10,20"
                        IsEnabled="{Binding Model.IsPlayEvent, Converter={cv:ReverseBoolConverter}}"
                        Maximum="{Binding Model.FramesCount}"
                        Minimum="0"
                        Value="{Binding Model.FrameNumber}">
                        <beh:Interaction.Triggers>
                            <beh:EventTrigger EventName="PreviewMouseDown">
                                <beh:InvokeCommandAction Command="{Binding UserClickedCommand}">
                                    <beh:InvokeCommandAction.CommandParameter>
                                        <s:Boolean>True</s:Boolean>
                                    </beh:InvokeCommandAction.CommandParameter>
                                </beh:InvokeCommandAction>
                            </beh:EventTrigger>
                            <beh:EventTrigger EventName="PreviewMouseUp">
                                <beh:InvokeCommandAction Command="{Binding UserClickedCommand}">
                                    <beh:InvokeCommandAction.CommandParameter>
                                        <s:Boolean>False</s:Boolean>
                                    </beh:InvokeCommandAction.CommandParameter>
                                </beh:InvokeCommandAction>
                            </beh:EventTrigger>
                        </beh:Interaction.Triggers>
                    </Slider>
                </Grid>
            </md:DrawerHost>
        </DockPanel>
    </Grid>
</UserControl>